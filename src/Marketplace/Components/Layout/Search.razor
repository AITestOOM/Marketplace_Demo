@using MudBlazor

<div class="search-container-wrapper">
    <div class="d-flex align-center mb-4">
        <MudIconButton Icon="@Icons.Material.Filled.ArrowBack" OnClick="@(() => OnClose.InvokeAsync())" Edge="Edge.Start" Color="Color.Primary" />
        <MudText Typo="Typo.h5">Vyhľadávanie</MudText>
    </div>

    @* Search Bar *@
    <div class="search-bar">
        <input type="text"
               class="search-input"
               placeholder="Hľadať služby a produkty..."
               @bind="searchTerm"
               @bind:event="oninput" />

        <div class="search-icon-wrapper">
            <MudIcon Icon="@Icons.Material.Filled.Search" Style="color: #0081EC;" />
        </div>
    </div>

    @* Recent Searches Section *@
    @if (recentSearches.Any())
    {
        <div class="recent-searches-section">
            <div class="recent-header">
                <h3 class="recent-title">Nedávne vyhľadávania</h3>
                <button class="clear-button" @onclick="ClearRecentSearches">Zmazať</button>
            </div>

            <ul class="recent-list">
                @foreach (var item in recentSearches)
                {
                    <li class="recent-list-item" @onclick="() => SelectSearchTerm(item)">
                        @item
                    </li>
                }
            </ul>
        </div>
    }
</div>

<style>
    /* Scoped CSS for the HeaderSearch component */
    .search-container-wrapper {
        background-color: #121315; /* Main dark background */
        color: #e0e0e0;
        font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif;
        padding: 16px;
        height: 100vh; /* Make it full screen */
    }

    /* --- Search Bar Styles --- */
    .search-bar {
        position: relative;
    }

    .search-input {
        width: 100%;
        background-color: #1D1E23;
        color: #e0e0e0;
        border: 1px solid #30343a;
        border-radius: 3px;
        padding: 12px 45px 12px 16px; /* Right padding for icon */
        font-size: 1rem;
        outline: none;
        box-sizing: border-box;
        transition: border-color 0.2s ease-in-out;
    }

        .search-input::placeholder {
            color: #808080;
        }

        .search-input:focus {
            border-color: #0081EC; /* Highlight on focus */
        }

    .search-icon-wrapper {
        position: absolute;
        right: 15px;
        top: 50%;
        transform: translateY(-50%);
    }

    /* --- Recent Searches Styles --- */
    .recent-searches-section {
        margin-top: 28px;
    }

    .recent-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 8px;
    }

    .recent-title {
        font-size: 1.1rem;
        font-weight: 600;
        color: #FFFFFF;
        margin: 0;
    }

    .clear-button {
        background: none;
        border: none;
        color: #0081EC; /* Blue link color */
        cursor: pointer;
        font-size: 0.9rem;
        font-weight: 500;
        padding: 4px;
    }

    .recent-list {
        list-style-type: none;
        padding: 0;
        margin: 0;
    }

    .recent-list-item {
        color: #a0a5ac;
        padding: 12px 4px;
        cursor: pointer;
        transition: color 0.2s ease-in-out, background-color 0.2s;
        border-bottom: 1px solid #2A2B31;
    }

        .recent-list-item:hover {
            color: #ffffff;
        }
</style>

@code {
    [Parameter] public EventCallback OnClose { get; set; }

    private string? searchTerm;

    private List<string> recentSearches = new List<string>
    {
        "vymena pneumatik",
        "kadernictvo",
        "oprava karoserie",
        "donaska potravin trnava"
    };

    private void ClearRecentSearches()
    {
        recentSearches.Clear();
    }

    private void SelectSearchTerm(string term)
    {
        searchTerm = term;
    }
}
