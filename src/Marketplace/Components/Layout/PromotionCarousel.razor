@using MudBlazor
@using Marketplace.Components.Pages
@using static Marketplace.Components.Pages.Home

@if (Offers != null && Offers.Any())
{
    <MudCarousel Class="mud-elevation-25" Style="height:140px; border-radius: 3px;"
                 ShowArrows="false" ShowBullets="true" EnableSwipe="true"
                 AutoCycle="true" TData="object">

        @foreach (var offerItem in Offers)
        {
            <MudCarouselItem>
                <div class="clickable-carousel-item" @onclick="@(() => OnOfferClick.InvokeAsync(offerItem))">
                    <MudCard Style="@($"background: linear-gradient(rgba(0, 0, 0, 0.4), rgba(0, 0, 0, 0.4)), url('{offerItem.ImageUrl}'); background-size: cover; background-position: center; height: 100%;")" Elevation="0">
                        <MudCardContent>
                            <div class="d-flex justify-space-between align-start" style="width: 100%;">
                                <div>
                                    <MudText Style="color: #FFFFFF; font-family: 'Nimbus Sans D OT', sans-serif; font-size: 16px; font-weight: 700; line-height: 1.3;">@offerItem.Title</MudText>
                                    <MudText Style="color: #FFFFFF; font-family: 'Nimbus Sans D OT', sans-serif; font-size: 14px; font-weight: 400; line-height: 1.3; opacity: 0.9;">@offerItem.Provider</MudText>
                                </div>
                            </div>
                        </MudCardContent>
                    </MudCard>
                </div>
            </MudCarouselItem>
        }
    </MudCarousel>
}

<style>
    .clickable-carousel-item {
        height: 100%;
        width: 100%;
        cursor: pointer;
    }
</style>

@code {
    [Parameter] public List<Offer> Offers { get; set; } = new();
    [Parameter] public EventCallback<Offer> OnOfferClick { get; set; }
}
